import sql, { ConnectionPool } from "mssql";
import { KhoaMap } from "../type";

// C·∫•u h√¨nh DB ch√≠nh
const config: sql.config = {
  user: "sa",
  password: "123456",
  server: "localhost",
  port: 60429,
  database: "DBTN",
  options: {
    encrypt: false,
    trustServerCertificate: true,
  },
};

// T·∫°o connection pool ch√≠nh
const mainPool = new sql.ConnectionPool(config);
let mainPoolConnected = false;

// Cache c√°c pool c·ªßa t·ª´ng khoa
const connectionPools: Record<number, ConnectionPool> = {};

/**
 * H√†m l·∫•y connection theo m√£ khoa
 * N·∫øu kh√¥ng truy·ªÅn MaKhoa -> d√πng DB ch√≠nh
 */
export async function getConnectionByKhoa(
  MaKhoa?: number
): Promise<ConnectionPool> {
  try {
    // üîπ ƒê·∫£m b·∫£o mainPool lu√¥n m·ªü
    if (!mainPoolConnected) {
      await mainPool.connect();
      mainPoolConnected = true;
      console.log("‚úÖ Connected to main DB (DBTN)");
    }

    // üîπ N·∫øu kh√¥ng truy·ªÅn MaKhoa => d√πng mainPool
    if (MaKhoa == null) {
      return mainPool;
    }

    // üîπ T√¨m th√¥ng tin Khoa t·ª´ b·∫£ng KHOA_MAP
    const result = await mainPool
      .request()
      .input("MaKhoa", sql.Int, MaKhoa)
      .query<KhoaMap>("SELECT * FROM KHOA_MAP WHERE MaKhoa = @MaKhoa");

    const khoa = result.recordset[0];
    if (!khoa) {
      throw new Error(`Kh√¥ng t√¨m th·∫•y MaKhoa = ${MaKhoa}`);
    }

    // üîπ N·∫øu ƒë√£ c√≥ cache th√¨ tr·∫£ l·∫°i ngay
    if (connectionPools[khoa.MaKhoa]?.connected) {
      return connectionPools[khoa.MaKhoa];
    }
    // üîπ N·∫øu ch∆∞a c√≥ ho·∫∑c b·ªã ƒë√≥ng ‚Üí t·∫°o m·ªõi
    const pool = new sql.ConnectionPool({
      user: khoa.UserName,
      password: khoa.Password,
      server: "localhost",
      port: 60429,
      database: khoa.DBName,
      options: { encrypt: false, trustServerCertificate: true },
    });

    await pool.connect();
    connectionPools[khoa.MaKhoa] = pool;
    console.log(`‚úÖ Connected to DB of Khoa: ${khoa.TenKhoa} (${khoa.DBName})`);
    return connectionPools[khoa.MaKhoa];
  } catch (err) {
    console.error("‚ùå Error in getConnectionByKhoa:", err);
    throw err;
  }
}
